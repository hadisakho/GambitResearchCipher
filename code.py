from string import ascii_letters
valid = ascii_letters + " .,@:" + "0123456789"

cipher = [
    175, 52, 216, 211, 62, 152, 135, 18, 219, 213, 54, 222, 200,
    67, 225, 211, 48, 224, 208, 62, 218, 218, 239, 210, 214, 65,
    140, 218, 62, 216, 221, 56, 218, 206, 239, 224, 207, 52, 140,
    174, 48, 217, 201, 56, 224, 135, 50, 212, 200, 59, 216, 204,
    61, 211, 204, 253, 140, 183, 59, 209, 200, 66, 209, 135, 66,
    209, 213, 51, 140, 224, 62, 225, 217, 239, 223, 214, 59, 225,
    219, 56, 219, 213, 239, 205, 213, 51, 140, 170, 37, 140, 219,
    62, 140, 208, 50, 205, 213, 50, 219, 203, 52, 172, 206, 48,
    217, 201, 56, 224, 217, 52, 223, 204, 48, 222, 202, 55, 154,
    202, 62, 217, 135, 64, 225, 214, 67, 213, 213, 54, 140, 217,
    52, 210, 204, 65, 209, 213, 50, 209, 161, 239, 157, 160, 51,
    208, 153, 50, 158, 203, 4, 210
]

len = 3

shifts = {}
for letter in range(len):
    slice = cipher[letter::len]
    for s in range(256):
        if all(chr((v - s) % 256) in valid for v in slice):
            shifts[letter] = s
            break

decoded = "".join(chr((c - shifts[i % len]) % 256) for i, c in enumerate(cipher))
print(decoded)
